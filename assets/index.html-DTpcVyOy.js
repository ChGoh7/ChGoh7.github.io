import{_ as d,c as p,a as s,b as e,d as i,w as h,e as r,r as t,o}from"./app-BFx6ATtL.js";const l="/assets/image-20241227163328813-DTB3jfHD.png",v="/assets/image-20241227174447038-BNsqTdRa.png",u="/assets/image-20241227174459830-GTvyjvV9.png",f="/assets/image-20241227165131041-4TpV4BbS.png",b="/assets/image-20241227165340716-CdC5_daK.png",m={};function x(g,a){const n=t("font");return o(),p("div",null,[a[32]||(a[32]=s("h2",{id:"hive简介-选择、判断",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#hive简介-选择、判断"},[s("span",null,"Hive简介（选择、判断）")])],-1)),a[33]||(a[33]=s("h3",{id:"hive概述",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#hive概述"},[s("span",null,"Hive概述")])],-1)),s("p",null,[a[4]||(a[4]=e("Hive:由Facebook开源用于解决海量")),i(n,{color:"red"},{default:h(()=>a[0]||(a[0]=[e("结构化")])),_:1}),a[5]||(a[5]=e("日志的数据统计工具。 Hive是基于Hadoop的一个")),i(n,{color:"red"},{default:h(()=>a[1]||(a[1]=[e("数据仓库工具")])),_:1}),a[6]||(a[6]=e("，可以将")),i(n,{color:"red"},{default:h(()=>a[2]||(a[2]=[e("结构化的数据文件映射为一张表")])),_:1}),a[7]||(a[7]=e("，并 提供")),i(n,{color:"red"},{default:h(()=>a[3]||(a[3]=[e("类SQL")])),_:1}),a[8]||(a[8]=e("查询功能。"))]),a[34]||(a[34]=r('<blockquote><p>问：</p><ol><li>什么是结构化日志？</li></ol><p>结构化日志，顾名思义不再是自由格式的日志，而是遵循了一定的结构：每一行日志就是一个结构。好处显而易见：简化日志解析，使得日志的后续处理、分析或查询变得方便高效。和结构化日志形成对比的就是传统的日志：一行或多行的字符串，字段之间主要是用空格等分隔符分隔开，输出格式自由定义。</p><ol start="2"><li>什么是数据仓库？</li></ol></blockquote><h4 id="hive-本质-将-hql-转化成-mapreduce-程序" tabindex="-1"><a class="header-anchor" href="#hive-本质-将-hql-转化成-mapreduce-程序"><span>Hive 本质：将 HQL 转化成 MapReduce 程序</span></a></h4><p><img src="'+l+'" alt="image-20241227163328813"></p><h4 id="hive底层运行逻辑" tabindex="-1"><a class="header-anchor" href="#hive底层运行逻辑"><span><strong>Hive底层运行逻辑</strong></span></a></h4><p><strong>（1）Hive 处理的数据存储在 HDFS</strong></p><p><strong>（2）Hive 分析数据底层的实现是 MapReduce</strong></p><p><strong>（3）执行程序运行在 Yarn 上</strong></p><h4 id="hive-优点" tabindex="-1"><a class="header-anchor" href="#hive-优点"><span><strong>Hive</strong> <strong>优点</strong></span></a></h4>',8)),s("p",null,[s("strong",null,[a[10]||(a[10]=e("（1）操作接口采用类 SQL 语法，")),i(n,{color:"red"},{default:h(()=>a[9]||(a[9]=[e("提供快速开发的能力")])),_:1}),a[11]||(a[11]=e("（简单、容易上手）。"))])]),s("p",null,[s("strong",null,[a[13]||(a[13]=e("（2）")),i(n,{color:"red"},{default:h(()=>a[12]||(a[12]=[e("避免了去写 MapReduce")])),_:1}),a[14]||(a[14]=e("，减少开发人员的学习成本。"))])]),s("p",null,[s("strong",null,[a[16]||(a[16]=e("（3）Hive 的执行延迟比较高，因此 ")),i(n,{color:"red"},{default:h(()=>a[15]||(a[15]=[e("Hive 常用于数据分析，对实时性要求不高的场合")])),_:1}),a[17]||(a[17]=e("。"))])]),s("p",null,[s("strong",null,[a[19]||(a[19]=e("（4）Hive ")),i(n,{color:"red"},{default:h(()=>a[18]||(a[18]=[e("优势在于处理大数据")])),_:1}),a[20]||(a[20]=e("，对于处理小数据没有优势，因为 Hive 的执行延迟比较高。"))])]),s("p",null,[s("strong",null,[a[22]||(a[22]=e("（5）Hive ")),i(n,{color:"red"},{default:h(()=>a[21]||(a[21]=[e("支持用户自定义函数")])),_:1}),a[23]||(a[23]=e("，用户可以根据自己的需求来实现自己的函数。无法实现。"))])]),a[35]||(a[35]=s("h4",{id:"hive缺点",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#hive缺点"},[s("span",null,"Hive缺点")])],-1)),a[36]||(a[36]=s("p",null,[s("strong",null,"Hive 的 HQL 表达能力有限")],-1)),s("p",null,[a[25]||(a[25]=e("（1）")),i(n,{color:"red"},{default:h(()=>a[24]||(a[24]=[e("迭代式算法无法表达")])),_:1})]),s("p",null,[a[27]||(a[27]=e("（2）数据挖掘方面不擅长，由于")),i(n,{color:"red"},{default:h(()=>a[26]||(a[26]=[e(" MapReduce 数据处理流程的限制，效率更高的算法却无法实现。")])),_:1})]),a[37]||(a[37]=s("p",null,[s("strong",null,"Hive 的效率比较低")],-1)),s("p",null,[a[29]||(a[29]=e("（1）Hive 自动生成的 MapReduce 作业，通常情况下")),i(n,{color:"red"},{default:h(()=>a[28]||(a[28]=[e("不够智能化")])),_:1})]),s("p",null,[a[31]||(a[31]=e("（2）Hive 调优比较困难，")),i(n,{color:"red"},{default:h(()=>a[30]||(a[30]=[e("粒度较粗")])),_:1})]),a[38]||(a[38]=r('<h4 id="hive和数据库比较" tabindex="-1"><a class="header-anchor" href="#hive和数据库比较"><span>Hive和数据库比较</span></a></h4><p>1.查询语句</p><p>由于SQL被广泛的应用于数据仓库，因此针对hive专门设计了类SQL的HQL查询语句，方便进行开发</p><p>2 数据存储位置</p><p>hive是建立在hadoop的基础上，hive的数据储存都是在hdfs中的，而数据库可以将数据保存在块设备或者自己的本地文件系统中</p><p>3 数据更新</p><p>hive是针对数据仓库应用设计的，数据仓库的内容是读多写少，因此hive不建议对已有的数据进行改写，因为数据都是在加载的时候确定好的</p><p>4 索引</p><p>hive没有索引，访问满足条的特定值的时候，需要暴力扫描整个数据，因此访问延迟较高</p><p>5 执行</p><p>hive大多数的查询是通过hadoop提供的MapReduce来实现的，而数据库通常有自己的执行引擎</p><p>6 执行延迟</p><p>一方面hive访问数据的时候是扫描整个数据，另一方面他的执行是通过MapReduce框架执行的，该框架本身具有延迟性</p><p>7 可扩展性</p><p>hive是基于hadoop的，所以其扩展性和hadoop一致的</p><p>8 数据规模</p><p>hive建立在集群上，并且可以利用MapReduce进行并行计算</p><h3 id="hive架构" tabindex="-1"><a class="header-anchor" href="#hive架构"><span>Hive架构</span></a></h3><h3 id="hive工作原理" tabindex="-1"><a class="header-anchor" href="#hive工作原理"><span>Hive工作原理</span></a></h3><h3 id="hive数据类型-重点" tabindex="-1"><a class="header-anchor" href="#hive数据类型-重点"><span>Hive数据类型（重点）</span></a></h3><p><img src="'+v+'" alt="image-20241227174447038"></p><p><img src="'+u+'" alt="image-20241227174459830"></p><h2 id="hive部署-相关配置" tabindex="-1"><a class="header-anchor" href="#hive部署-相关配置"><span>Hive部署（相关配置）</span></a></h2><h3 id="hive-site-xml" tabindex="-1"><a class="header-anchor" href="#hive-site-xml"><span>Hive-site.xml</span></a></h3><p><img src="'+f+'" alt="image-20241227165131041"></p><p><img src="'+b+'" alt="	"></p><h2 id="hive的数据定义语言-简答" tabindex="-1"><a class="header-anchor" href="#hive的数据定义语言-简答"><span>Hive的数据定义语言（简答）</span></a></h2><blockquote><p>参考期中考试复习</p></blockquote><h3 id="分区表-重点" tabindex="-1"><a class="header-anchor" href="#分区表-重点"><span>分区表（重点）</span></a></h3><h4 id="创建分区表" tabindex="-1"><a class="header-anchor" href="#创建分区表"><span>创建分区表</span></a></h4><h4 id="查询分区表" tabindex="-1"><a class="header-anchor" href="#查询分区表"><span>查询分区表</span></a></h4><h4 id="添加分区" tabindex="-1"><a class="header-anchor" href="#添加分区"><span>添加分区</span></a></h4><h4 id="重命名分区" tabindex="-1"><a class="header-anchor" href="#重命名分区"><span>重命名分区</span></a></h4><h4 id="移动分区" tabindex="-1"><a class="header-anchor" href="#移动分区"><span>移动分区</span></a></h4><h4 id="删除分区-重点" tabindex="-1"><a class="header-anchor" href="#删除分区-重点"><span>删除分区（重点）</span></a></h4><h3 id="分桶表-重点" tabindex="-1"><a class="header-anchor" href="#分桶表-重点"><span>分桶表（重点）</span></a></h3><h4 id="创建分桶表" tabindex="-1"><a class="header-anchor" href="#创建分桶表"><span>创建分桶表</span></a></h4><h4 id="查看分桶信息" tabindex="-1"><a class="header-anchor" href="#查看分桶信息"><span>查看分桶信息</span></a></h4><h2 id="hive的数据操作语言-1x简答-、-1x-编程" tabindex="-1"><a class="header-anchor" href="#hive的数据操作语言-1x简答-、-1x-编程"><span>Hive的数据操作语言（1x简答 、 1x 编程）</span></a></h2><h2 id="hive数据查询语言-30分左右" tabindex="-1"><a class="header-anchor" href="#hive数据查询语言-30分左右"><span>Hive数据查询语言（30分左右）</span></a></h2><blockquote><p>这里以下是小题+1道编程题</p></blockquote><h3 id="select句式分析" tabindex="-1"><a class="header-anchor" href="#select句式分析"><span>SELECT句式分析</span></a></h3><h3 id="hive运算符" tabindex="-1"><a class="header-anchor" href="#hive运算符"><span>Hive运算符</span></a></h3><h4 id="关系运算符" tabindex="-1"><a class="header-anchor" href="#关系运算符"><span>关系运算符</span></a></h4><h4 id="算术运算符" tabindex="-1"><a class="header-anchor" href="#算术运算符"><span>算术运算符</span></a></h4><h4 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符"><span>逻辑运算符</span></a></h4><h4 id="复杂运算符" tabindex="-1"><a class="header-anchor" href="#复杂运算符"><span>复杂运算符</span></a></h4><h3 id="公用表表达式" tabindex="-1"><a class="header-anchor" href="#公用表表达式"><span>公用表表达式</span></a></h3><blockquote><p>从这里开始有3道编程题，重点复习</p></blockquote><h3 id="分组操作" tabindex="-1"><a class="header-anchor" href="#分组操作"><span>分组操作</span></a></h3><h3 id="排序操作" tabindex="-1"><a class="header-anchor" href="#排序操作"><span>排序操作</span></a></h3><h3 id="join语句" tabindex="-1"><a class="header-anchor" href="#join语句"><span>JOIN语句</span></a></h3><h2 id="hive函数-10-15分-1x编程-几道小题" tabindex="-1"><a class="header-anchor" href="#hive函数-10-15分-1x编程-几道小题"><span>Hive函数（10-15分 1x编程 几道小题）</span></a></h2><h3 id="hive内置函数-1-2小题-常见的sum-avg等函数" tabindex="-1"><a class="header-anchor" href="#hive内置函数-1-2小题-常见的sum-avg等函数"><span>Hive内置函数（1-2小题 常见的sum avg等函数）</span></a></h3><h4 id="聚合函数" tabindex="-1"><a class="header-anchor" href="#聚合函数"><span>聚合函数</span></a></h4><h4 id="数学函数" tabindex="-1"><a class="header-anchor" href="#数学函数"><span>数学函数</span></a></h4><h3 id="hive自定义函数-重点" tabindex="-1"><a class="header-anchor" href="#hive自定义函数-重点"><span>Hive自定义函数（重点）</span></a></h3><h4 id="udf" tabindex="-1"><a class="header-anchor" href="#udf"><span>UDF</span></a></h4><h4 id="udtf" tabindex="-1"><a class="header-anchor" href="#udtf"><span>UDTF</span></a></h4><h4 id="udaf" tabindex="-1"><a class="header-anchor" href="#udaf"><span>UDAF</span></a></h4><h2 id="hive优化" tabindex="-1"><a class="header-anchor" href="#hive优化"><span>Hive优化</span></a></h2><h2 id="数据存储和压缩-ppt复习" tabindex="-1"><a class="header-anchor" href="#数据存储和压缩-ppt复习"><span>数据存储和压缩（ppt复习）</span></a></h2><h2 id="综合项目-1-2小题-5分左右" tabindex="-1"><a class="header-anchor" href="#综合项目-1-2小题-5分左右"><span>综合项目（1-2小题 5分左右）</span></a></h2>',63))])}const H=d(m,[["render",x],["__file","index.html.vue"]]),q=JSON.parse('{"path":"/article/9hjlucdp/","title":"Hive重点标红","lang":"zh-CN","frontmatter":{"title":"Hive重点标红","createTime":"2024/12/27 16:06:03","permalink":"/article/9hjlucdp/","tags":["Hive"]},"headers":[],"readingTime":{"minutes":4.07,"words":1220},"git":{"updatedTime":1735404182000,"contributors":[{"name":"wuchen","username":"wuchen","email":"3180349973@qq.com","commits":2,"avatar":"https://avatars.githubusercontent.com/wuchen?v=4","url":"https://github.com/wuchen"}],"changelog":[{"hash":"828b31e7288d4b6cc09049641786ac989e067ec6","date":1735404182000,"email":"3180349973@qq.com","author":"wuchen","message":"update qimofuxi","commitUrl":"https://github.com/ChGoh7/ChGoh7.github.io/tree/docs/commit/828b31e7288d4b6cc09049641786ac989e067ec6"},{"hash":"835c4162426d05c7d9f94a7d8be87922c23c31e5","date":1735324699000,"email":"3180349973@qq.com","author":"wuchen","message":"add exams revises","commitUrl":"https://github.com/ChGoh7/ChGoh7.github.io/tree/docs/commit/835c4162426d05c7d9f94a7d8be87922c23c31e5"}]},"filePathRelative":"DOING/Hive重点标红.md","categoryList":[{"id":"233681","sort":10064,"name":"DOING"}],"bulletin":false}');export{H as comp,q as data};
