import{_ as s,c as a,a as e,o as p}from"./app-DNksp9_M.js";const l={};function t(n,i){return p(),a("div",null,i[0]||(i[0]=[e(`<p>Hive是由Facebook开源用于解决海量（ <mark>结构化</mark> ）日志的数据统计工具。</p><p>Hive执行MapReduce作业所需的资源是由（ <mark>YARN</mark> ）来调度的。</p><p>两种常用的大数据日志压缩技术是（ <mark><strong>Gzip</strong></mark> ）压缩和（ <strong><mark>Lzo</mark></strong> ）压缩。</p><p>已知三种大数据压缩格式：lzo、bzip2和gzip。压缩比最大的压缩格式是（ <mark>Bzip2</mark> ），压缩速度最快的是（ <mark>Lzo</mark> ）。压缩比：bzip2&gt;gzip&gt;lzo 压缩速度：lzo&gt;gzip&gt;bzip2</p><p>已知Hive中的数据表为dept，查看该表详细信息的命令是：（ <mark>DESC FORMATTED dept;</mark> ）。</p><p>Hive中关键字 （ <mark>AS</mark> ）用于指定查询结果中的列别名</p><p>创建Hive外部表的关键字是create （ <mark>EXTERNAL</mark> ）tableName。</p><p>SORT BY与DISTRIBUTE BY的区别在于（ SORT BY 对每个REDUCER内部数据进行排序，DISTRIBUTE BY 决定数据在哪个REDUCER进行处理，进行分区 ）</p><p>数据仓库与操作型数据库的主要区别是（ ）</p><p>Hive中UDTF表生成函数explode处理的数据类型是（ <mark>ARRAY</mark> ）和（ <mark>MAP</mark> ）。</p><p>查看HQL语句执行计划的关键字是（ <mark>EXPLAIN</mark> ）。</p><p>Hive用于执行查询的命令是（ <mark>SELECT</mark> ）</p><p>生产环境使用最多的大数据列式存储格式是（ <mark>Parquet</mark> ）和（ <mark>ORC</mark> ）。</p><p>Hive实现单列转多行的“爆炸函数”是（ <mark>explode</mark> ）。</p><p>函数( <mark>COUNT()</mark> )用于计算数据集中的行数</p><p>Hive数据表在HDFS上的默认存储路径是（ <mark>/user/hive/warehouse</mark> ）。</p><p>Hive加载数据文件到数据表中的关键字是（ <mark>LOAD DATA</mark> ）。</p><p>ive是建立在（ <mark>Hadoop</mark> ）之上的一个数据仓库。</p><p>Hive的本质是将HQL语句转化成（ <mark>MapReduce</mark> ）程序。</p><p>Hive安装目录下最重要的配置文件是（ <mark>hive-site.xml</mark> ）。</p><p>ive中通常使用insert+（ <mark>SELECT</mark> ）完成数据表的快速创建。</p><p>窗口表达式的关键字是（ <mark>over</mark> ） between。</p><p>指定Hive数据存储格式的关键字是（ <mark>STORED</mark> ）as。</p><p>Hive是一个基于Hadoop的数据仓库工具，用于处理和分析大规模数据集。（<mark>T</mark>）</p><p>Hive的安装和配置不需要Hadoop集群环境。（<mark>F</mark>）</p><p>Hive的元数据通常存储在MySQL或PostgreSQL等关系型数据库中。（<mark>T</mark>）</p><p>数据仓库的主要目的是用于日常操作型处理。 （<mark>F</mark>）</p><p>数据仓库中的数据通常是经过整合和转换的历史数据。 （<mark>T</mark>）</p><p>Hive是一种支持SQL查询的分布式数据库管理系统。（<mark>T</mark>）</p><p>HQL是Hive的查询语言，与SQL语法完全相同。（<mark>F</mark>）</p><p>Hive的表可以存储在本地文件系统中，而不必存储在HDFS上。 （<mark>F</mark>）</p><p>Hive中的视图是逻辑上的表，不存储数据。 （<mark>T</mark>）</p><p>Hive可以与Hadoop生态系统中的其他组件（如HBase、Pig）集成使用。（<mark>T</mark>）</p><p>Hive中数据只能从HDFS加载，不能从本地文件系统加载。（<mark>F</mark>）</p><p>HiveServer2允许客户端使用多种编程语言进行数据访问。 （<mark>F</mark>）</p><p>在HQL中，可以使用SELECT语句从Hive表中查询数据。（<mark>T</mark>）</p><p>HQL支持所有的SQL函数和操作符。（<mark>F</mark>）</p><p>在Hive中，可以使用CREATE TABLE语句创建表结构。（<mark>T</mark>）</p><p>Hive中的表一旦创建，就不能修改其结构。（<mark>F</mark>）</p><p>Hive支持多种数据类型，包括STRING、INT、FLOAT等。（<mark>T</mark>）</p><p>Hive的DML操作包括数据的插入、更新和删除。（<mark>F</mark>）</p><p>在Hive中，可以使用LOAD DATA语句将数据加载到表中。（<mark>T</mark>）</p><p>Hive支持事务处理，因此可以执行回滚操作。（<mark>F</mark>）</p><p>Hive支持多种类型的连接操作，包括INNER JOIN、LEFT JOIN等。（<mark>T</mark>）</p><p>Hive中的连接操作通常比单表查询慢。（<mark>T</mark>）</p><p>在Hive中，可以使用ON子句来指定连接条件。（<mark>T</mark>）</p><p>子查询在Hive中总是比连接操作更高效。（<mark>F</mark>）</p><p>在Hive中，可以使用WITH子句来定义临时表，以优化子查询。（<mark>T</mark>）</p><p>分区表可以提高Hive查询的性能，特别是当查询涉及大量数据时。（<mark>T</mark>）</p><p>分桶表是一种将数据按照特定规则进行分桶存储的表结构。（<mark>T</mark>）</p><p>外部表的数据存储在Hive外部的HDFS或其他存储系统中，Hive只管理其元数据。（<mark>T</mark>）</p><p>使用Hive相关命令修改内部表hive_wordcount为外部表。</p><p><code>alter table hive_wordcount set tblproperties(&#39;EXTERNAL&#39;=&#39;TRUE&#39;);</code></p><p>目前创建了一个分区表为：t_all_hero_part，请使用Hive相关命令为该分区表加一个分区role=&#39;soliders&#39;。</p><p><code>ALTER TABLE t_all_hero_part ADD PARTITION (role=&#39;soliders&#39;);</code></p><p>使用HDFS shell命令删除/user/hive/warehouse/t_all_hero_part/路径下的所有文件。</p><p><code>hdfs dfs -rm -r /user/hive/warehouse/t_all_hero_part/*</code></p><p>再新增</p><p><code> hdfs dfs -put localfile_path /user/hive/warehouse/t_all_hero_part/</code></p><p>Hive和传统关系型数据库的区别是什么？</p><ol><li><p>数据规模和存储：</p><ol><li>Hive设计用于处理大规模数据集，通常存储在分布式文件系统（如HDFS）中，适合处理TB或PB级别的数据。</li><li>关系型数据库设计用于处理相对较小的数据集，存储在单个服务器或少量服务器的本地磁盘上，适合处理MB或GB级别的数据。</li></ol></li><li><p>查询性能：</p><ol><li>Hive查询性能相对较慢，因为它是为大规模数据集设计的，适合批量处理而非实时查询。</li><li>关系型数据库查询性能较快，适合需要快速响应的实时查询和事务处理。</li></ol></li><li><p>扩展性</p><ol><li>Hive易于水平扩展，可以通过增加更多的节点来提高处理能力和存储容量</li><li>关系型数据库扩展性较差，通常需要更复杂的数据库集群技术。</li></ol></li><li><p>Hive：</p><ol><li>Hive适合批处理，不适合实时查询。</li><li>关系型数据库适合实时查询和事务处理。</li></ol></li><li><p>成本</p><ol><li>Hive：通常成本较低，因为它使用开源软件和廉价硬件。</li><li>RDBMS：可能成本较高，因为需要购买商业软件许可和高性能硬件。</li></ol></li><li><p>多表插入</p><ol><li>Hive支持多表插入</li><li>关系型数据库通常不支持</li></ol></li></ol><p>简要描述Hive中order by、sort by、distribute by以及cluster by的区别。</p><p><code>ORDER BY</code>是SQL标准的一部分，用于对查询结果进行全局排序。</p><p><code>SORT BY</code>用于在MapReduce的Reduce阶段对数据进行排序。它保证每个Reducer的输出是有序的，但不保证全局有序。</p><p><code>DISTRIBUTE BY</code>用于控制数据应该发送到哪个Reducer。它通过哈希分区来决定每个行应该发送到哪个Reducer，但不保证输出的顺序</p><p><code>CLUSTER BY</code>类似于<code>DISTRIBUTE BY</code>，但它在发送数据到Reducer之前会先对数据进行排序。当distribute by 和sort by <mark>修饰同一个字段</mark>的时候可以直接使用</p><p>已知创建的Hive表为员工表emp，现在需要将整张表的查询结果导出到HDFS路径下：/export/tests/，请写出相应的Hive导出命令。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">INSERT</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> OVERWRITE DIRECTORY </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/export/tests/</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ROW</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> FORMAT DELIMITED </span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">FIELDS TERMINATED </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">BY</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SELECT</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> emp;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请简要描述hive数据仓库的数据处理执行流程。</p><ol><li><p>数据仓库对SQL进行统计分析</p></li><li><p>把SQL语言的常用操作用MapReduce写成很多模版</p></li><li><p>所有的MapReduce模版封装在Hive中</p></li><li><p>通过Hive框架匹配相应的MapReduce模版</p></li><li><p>运行MapReduce程序，生成相应的分析结果</p></li><li><p>客户端得到结果</p></li><li><p>用户根据业务需求编写相应的SQL语句</p></li><li><p>重复执行第三步到第五步直到得到结果</p></li></ol><p>Hive的本质是什么？</p><p>Hive是基于Hadoop的一个数据仓库工具，可以将结构化的数据文件映射为一张表，并提供类SQL查询功能。本质是将HQL转化为MapReduce程序。</p><p>在大数据日志压缩场景中，请简述mapreduce.map.output与mapreduce.output的区别。</p><p>场景： 输入文件的压缩，中间结果的压缩，输出文件结果的压缩</p><p>对输出文件的压缩：</p><ol><li><p>Compressing output files:对应的是mapreduce中的reduce输出（mapreduce.output），</p></li><li><p>Compressing map output ：对应的是mapreduce中的map端的输出（mapreduce.map.output），首先写到本地的磁盘空间中去，然后通过shuffle将数据传输到reduce端去处理。</p></li></ol><p>已知Hive中的原始表为dept_hdfs_external，其字段为：deptno,dname,loc。待创建的新的表名为:dept_hdfs_copy，请使用as select语句完成dept_hdfs_copy表的创建和数据加载，表中字段和原始表保持一致。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">create</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> table</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> if</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> not</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> exists</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> dept_hdfs_copy</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">as</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> select</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> deptno,dname,loc </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">from</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> dept_hdfs_exteranl;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>创建新数据库work_hdfs，指定其位置存放在HDFS上：/work_database，使用命令查看该数据库的详细信息。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">CREATE</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> DATABASE</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> work_hdfs</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> LOCATION</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/work_database</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">DESC</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> DATABASE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> EXTENDED work_hdfs;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询平均薪资待遇大于20000的各种工作。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">select</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  job,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">avg</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(sal) avg_sal  </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">from</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> emp </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">group by</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> job </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">having</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> avg_sal </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 20000</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>给emp表增加1列：jobdesc 工作描述</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">alter</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> table</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> emp  </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">add</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  columns(jobdesc string);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>基于员工表emp，使用窗口排序函数row_number() over(...)实现需求：列出每个部门薪资最高的前两名职工名称以及薪资待遇。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SELECT</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ename, sal, rk</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">  SELECT</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ename, sal, </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">row_number</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">() </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">OVER</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">PARTITION</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> BY</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> deptno </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ORDER BY</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> sal </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">DESC</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">AS</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> rk</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">  FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> emp</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) t</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">WHERE</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> rk </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>基于提供的the_nba_championship表，请使用lateral view+explode完成如下需求：</p><p>统计每个球队获取总冠军的次数，并且根据次数倒序排序。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">select</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> a</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">team_name</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">count</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">as</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> nums  </span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">from</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> the_nba_championship a lateral view explode(champion_year) b </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">as</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> year</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">group by</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> a</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">team_name</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">order by</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> nums </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">desc</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>基于员工表emp，查询每种工作有多少个员工，查询结果按降序排序，最终输出结果有2个字段：job和count_emp</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">SELECT</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> job, </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">COUNT</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">*</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">AS</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> count_emp</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">FROM</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> emp</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">GROUP BY</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> job</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">ORDER BY</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> count_emp </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">DESC</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,91)]))}const h=s(l,[["render",t],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/article/v44vwjin/","title":"Hive最终复习题","lang":"zh-CN","frontmatter":{"title":"Hive最终复习题","createTime":"2024/12/29 22:53:32","permalink":"/article/v44vwjin/","tags":["Hive"]},"headers":[],"readingTime":{"minutes":7.99,"words":2396},"git":{"updatedTime":1735490917000,"contributors":[{"name":"wuchen","username":"wuchen","email":"3180349973@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/wuchen?v=4","url":"https://github.com/wuchen"}],"changelog":[{"hash":"b181ee8aa0c4103f8ca90216414edaa5e8e6ba3b","date":1735490917000,"email":"3180349973@qq.com","author":"wuchen","message":"docs: add hadoop,hive qimofuxi","commitUrl":"https://github.com/ChGoh7/ChGoh7.github.io/tree/docs/commit/b181ee8aa0c4103f8ca90216414edaa5e8e6ba3b"}]},"filePathRelative":"DOING/Hive最终复习题.md","categoryList":[{"id":"233681","sort":10064,"name":"DOING"}],"bulletin":false}');export{h as comp,r as data};
