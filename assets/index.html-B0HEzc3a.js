import{_ as e,c as l,b as a,o as r}from"./app--wkvTZ2b.js";const d={};function n(o,t){return r(),l("div",null,t[0]||(t[0]=[a('<table><thead><tr><th style="text-align:left;">reactive</th><th style="text-align:left;">ref</th></tr></thead><tbody><tr><td style="text-align:left;">❌ 只支持对象和数组（引用数据类型）</td><td style="text-align:left;">✅ 支持基本数据类型 + 引用数据类型</td></tr><tr><td style="text-align:left;">✅ 在 <code>&lt;script&gt; </code>和<code>&lt;template&gt;</code>中无差别使用</td><td style="text-align:left;">❌ 在 <code>&lt;script&gt;</code> 和 <code>&lt;template&gt;</code> 使用方式不同（在<code>&lt;script&gt;</code>中要使用 .value）</td></tr><tr><td style="text-align:left;">❌ 重新分配一个新对象会丢失响应性</td><td style="text-align:left;">✅ 重新分配一个新对象不会失去响应</td></tr><tr><td style="text-align:left;">能直接访问属性</td><td style="text-align:left;">需要使用 .value 访问属性</td></tr><tr><td style="text-align:left;">❌ 将对象传入函数时，失去响应</td><td style="text-align:left;">✅ 传入函数时，不会失去响应</td></tr><tr><td style="text-align:left;">❌ 解构时会丢失响应性，需使用 toRefs</td><td style="text-align:left;">❌ 解构对象时会丢失响应性，需使用 toRefs</td></tr></tbody></table>',1)]))}const s=e(d,[["render",n],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/notes/frontend/5ljh48ef/","title":"ref和reactive","lang":"zh-CN","frontmatter":{"title":"ref和reactive","createTime":"2024/10/17 16:22:27","permalink":"/notes/frontend/5ljh48ef/"},"headers":[],"readingTime":{"minutes":0.55,"words":165},"git":{"updatedTime":1729187725000,"contributors":[{"name":"chgoh7","email":"3180349973@qq.com","commits":2,"avatar":"https://avatars.githubusercontent.com/chgoh7?v=4","url":"https://github.com/chgoh7"}]},"filePathRelative":"notes/frontend/frontend-framework/vue响应式/ref和reactive.md","bulletin":false}');export{s as comp,c as data};
